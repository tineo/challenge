name: Deployment

on:
  push:
    branches:
      - main

jobs:

  build-and-push-image:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Maven
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 17

      - name: Build jar and package
        run: mvn clean install

      - name: Build image, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_URI }}
          ECR_REPOSITORY: challenge
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Run ECS task
        uses: aws/aws-actions/run-ecs-task@v1
        with:
          cluster-name: mi-cluster-ecs
          task-definition: mi-aplicacion
          parameters:
            env: production


  create-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Maven
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 17

      - name: Build and package
        run: mvn clean install

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GH_TOKEN }}
          tag_name: v1.0.0
          name: My Release
          body: This is my first release!
          draft: false
          prerelease: false
          files: target/challenge-0.0.1-SNAPSHOT.jar

